// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ServiceStore.Api.ShoppingCart.Persistence;

#nullable disable

namespace ServiceStore.Api.ShoppingCart.Migrations
{
    [DbContext(typeof(CartContext))]
    [Migration("20230928012804_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ServiceStore.Api.ShoppingCart.Models.CartSession", b =>
                {
                    b.Property<int>("CartSessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CartSessionId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("CartSessionId");

                    b.ToTable("CartSessions");
                });

            modelBuilder.Entity("ServiceStore.Api.ShoppingCart.Models.CartSessionDetail", b =>
                {
                    b.Property<int>("CartSessionDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CartSessionDetailId"));

                    b.Property<int>("CartSessionId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SelectedBook")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("CartSessionDetailId");

                    b.HasIndex("CartSessionId");

                    b.ToTable("CartSessionDetails");
                });

            modelBuilder.Entity("ServiceStore.Api.ShoppingCart.Models.CartSessionDetail", b =>
                {
                    b.HasOne("ServiceStore.Api.ShoppingCart.Models.CartSession", "CartSession")
                        .WithMany("ListOfDetails")
                        .HasForeignKey("CartSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CartSession");
                });

            modelBuilder.Entity("ServiceStore.Api.ShoppingCart.Models.CartSession", b =>
                {
                    b.Navigation("ListOfDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
